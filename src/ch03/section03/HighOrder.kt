package ch03.section03


/** 함수형 프로그래밍 정리
 *
 * 프로그램을 모듈화 해 디버깅, 테스트 쉬움
 * 간략한 표현식 사용해 생산성 높음
 * 람다식 고차함수 사용해 다양함 함수조합 사용가능
 *
 * 순수함수를 조합해 상태 데이터 변경이나 부작용이 없는 루틴을 만들어내며
 * 람다식을 이용해 함수를 변수처럼 매개변수, 인자 , 반환값 등에 활용하는 고차함수를 구성해
 * 생산성을 높인 프로그래밍 방법
 * */
// 고차함수에 람다식을 넣을 때 맨 뒤에 넣는 것이 좋음
fun high(a: Int, b: Int, sum: (Int, Int) -> Int): Int {
    return sum(a, b)
}

fun main() {
    val result = high(1, 3){ x, y ->
        x + y
    }
    println(result)
}