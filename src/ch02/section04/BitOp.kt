package ch02.section04

/**
 * 비트연산자
 *  1010(2) = 2^1+2^3 = 10(10)
 *  가장 왼쪽에 있는 비트는 부호를 판단하는데 사용
 *
 *  비트메소드
 *  2.shl(bits) : 2를 표현하는 비트를 bits만큼 왼쪽으로 이동 (부호O) - 나머지 0으로 채움
 *  2.shr(bits) : 2을 표현하는 비트 bits만큼 오른쪽 이동 (부호O)
 *  2.ushr(bits) : 2 표현하는 비트 bits만큼 오른쪽 이동 (부호X)
 *  2.and(bits) : 2 표현하는 비트와 bits를 표현하는 비트로 논리곱 연산
 *  2.or(bits) : 2 표현하는 비트와 bits를 표현하는 비트로 논리합 연산
 *  2.xor(bits) : 2를 표현하는 비트와 bits를 표현하는 비트의 배타적 연산
 *  2.inv() : 2 표현하는 비트 모두 뒤집기(1->0, 0->1)
 *  */

fun main() {
    val x = 4 // 0100(2) 4(10)
    val y = 0b0000_1010 // 5(10)
    val z = 0x0f // 0b0000_1111 15(10)

    println("x shl 2 -> ${x.shl(2)}") //16(10) 0001_0000
    println("x inv -> ${x.inv()}") //-5(10) 11...1011(2)
}